## makeCacheMatrix function - contains a list of functions that return and get the inverse of a matrix
## cacheSolve function - evaluate and storage the inverse of a matrix

## Write a short comment describing this function

makeCacheMatrix <- function(x = matrix()) {
	inv <- NULL
	get_m <- function() x
	set_inv_m <- function(inv_) inv <<- inv_
	get_inv_m <- function() inv
	list(get = get_m, set_inv = set_inv_m, get_inv = get_inv_m)

}


## Write a short comment describing this function

cacheSolve <- function(x, ...) {
        ## Return a matrix that is the inverse of 'x'
	m_inv <- x$get_inv()
	if (!is.null(m_inv))
	{
		return(m_inv)
	}
	#data_m <- x$get()
	m_inv <- solve(x$get())
	x$set_inv(m_inv)
	m_inv
}
